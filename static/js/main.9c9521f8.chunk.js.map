{"version":3,"sources":["dict-ez/ImageUtils.js","dict-ez/OcrService.js","dict-ez/OcrPage.js","dict-ez/config.js","dict-ez/TtsService.js","dict-ez/TtsPage.js","dict-ez/DictEzApp.js","App.js","serviceWorker.js","index.js"],"names":["getBase64","file","_cbProcessImage","_cbProcessError","reader","FileReader","readAsArrayBuffer","onload","srcOrientation","buffer","view","DataView","getUint16","length","byteLength","offset","marker","getUint32","little","tags","i","getOrientation","result","base64","arrayBuffer","chunk","encodings","bytes","Uint8Array","byteRemainder","mainLength","base64ArrayBuffer","img","Image","setAttribute","height","Math","floor","width","canvas","document","createElement","ctx","getContext","indexOf","transform","drawImage","toDataURL","onerror","getOcrLang","_locale","startsWith","TOOLBAR_SELECT_LANG","OcrPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","toolbar_msg","lang","LANG_NONE","isPostingOcr","scannedFileBase64","handleReset","bind","assertThisInitialized","handleCapturing","processBase64Image","processBase64ImageError","processOcrContent","processOcrError","setState","_base64Url","_error","console","log","_response","completeText","data","ParsedResults","forEach","parsedResult","ParsedText","onOcrCompleted","_event","resetAll","target","files","_lang","getElementById","click","_this2","react_default","a","react_onsenui","renderToolbar","className","onClick","isOpen","indeterminate","type","id","name","accept","capture","style","display","onChange","event","value","src","alt","_ocrApiKey","_base64Image","_cbProcessResp","urlOcrApi","formData","FormData","append","axios","post","then","response","catch","error","callOcrSpace","modifier","hangleLangBtnClick","LANG_ZH_HK","LANG_ZH_TW","LANG_EN","Component","callVoiceRss","_voiceRssApiKey","_content","_speed","urlVoiceRss","getVoiceRssLang","TOOLBAR_MSG_INIT","DEFAULT_SPEECH_SPEED","TtsPage","ttsContent","ttsContents","trim","split","speechSpeed","isPostingTts","handleBackHome","handlePlay","handlePlayAll","handleUpdateItem","handleMoveItem","processTtsContent","processTtsError","playVoice","onBackToHome","_sentence","playFromArray","arrContents","str","voiceContent","undefined","encodeURI","shift","respData","_idx","prevState","map","item","idx","_step","thisValue","nextValue","_voiceContent","audio","querySelector","paused","ended","load","playPromise","play","_this3","verticalAlign","textAlign","parseInt","controls","dataSource","renderRow","row","key","fontSize","float","DictEzApp","changeToTtsPage","backToOcrPage","_textContent","src_dict_ez_OcrPage","dict_ez_TtsPage","App","dict_ez_DictEzApp","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c9521f8.chunk.js","sourcesContent":["export function getBase64(file, _cbProcessImage, _cbProcessError) {\n    var reader = new FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onload = function () {\n        var srcOrientation = getOrientation(reader.result);\n        var base64 = 'data:image/jpg;base64,' + base64ArrayBuffer(reader.result);\n        var img = new Image();\n        img.setAttribute(\"src\", base64);\n        img.onload = function() {\n            var width = 800;\n            var height = Math.floor(img.height * (width / img.width));\n            var canvas = document.createElement('canvas');\n            canvas.width = width;\n            canvas.height = height;\n            var ctx = canvas.getContext(\"2d\");\n\n            // set proper canvas dimensions before transform & export\n            if ([5,6,7,8].indexOf(srcOrientation) > -1) {\n                canvas.width = height;\n                canvas.height = width;\n            } else {\n                canvas.width = width;\n                canvas.height = height;\n            }\n\n            // transform context before drawing image\n            switch (srcOrientation) {\n                case 2: ctx.transform(-1, 0, 0, 1, width, 0); break;\n                case 3: ctx.transform(-1, 0, 0, -1, width, height ); break;\n                case 4: ctx.transform(1, 0, 0, -1, 0, height ); break;\n                case 5: ctx.transform(0, 1, 1, 0, 0, 0); break;\n                case 6: ctx.transform(0, 1, -1, 0, height , 0); break;\n                case 7: ctx.transform(0, -1, -1, 0, height , width); break;\n                case 8: ctx.transform(0, -1, 1, 0, 0, width); break;\n                default: ctx.transform(1, 0, 0, 1, 0, 0);\n            }\n\n            ctx.drawImage(img, 0, 0, width, height);\n            _cbProcessImage(canvas.toDataURL(\"image/jpeg\",0.7));\n        }\n    };\n    reader.onerror = _cbProcessError;\n}\n\nexport function base64ArrayBuffer(arrayBuffer) {\n    var base64    = ''\n    var encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\n    var bytes         = new Uint8Array(arrayBuffer)\n    var byteLength    = bytes.byteLength\n    var byteRemainder = byteLength % 3\n    var mainLength    = byteLength - byteRemainder\n\n    var a, b, c, d\n    var chunk\n\n    // Main loop deals with bytes in chunks of 3\n    for (var i = 0; i < mainLength; i = i + 3) {\n        // Combine the three bytes into a single integer\n        chunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2]\n\n        // Use bitmasks to extract 6-bit segments from the triplet\n        a = (chunk & 16515072) >> 18 // 16515072 = (2^6 - 1) << 18\n        b = (chunk & 258048)   >> 12 // 258048   = (2^6 - 1) << 12\n        c = (chunk & 4032)     >>  6 // 4032     = (2^6 - 1) << 6\n        d = chunk & 63               // 63       = 2^6 - 1\n\n        // Convert the raw binary segments to the appropriate ASCII encoding\n        base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d]\n    }\n\n    // Deal with the remaining bytes and padding\n    if (byteRemainder == 1) {\n        chunk = bytes[mainLength]\n\n        a = (chunk & 252) >> 2 // 252 = (2^6 - 1) << 2\n\n        // Set the 4 least significant bits to zero\n        b = (chunk & 3)   << 4 // 3   = 2^2 - 1\n\n        base64 += encodings[a] + encodings[b] + '=='\n    } else if (byteRemainder == 2) {\n        chunk = (bytes[mainLength] << 8) | bytes[mainLength + 1]\n\n        a = (chunk & 64512) >> 10 // 64512 = (2^6 - 1) << 10\n        b = (chunk & 1008)  >>  4 // 1008  = (2^6 - 1) << 4\n\n        // Set the 2 least significant bits to zero\n        c = (chunk & 15)    <<  2 // 15    = 2^4 - 1\n\n        base64 += encodings[a] + encodings[b] + encodings[c] + '='\n    }\n\n    return base64\n}\n  \nexport function getOrientation(buffer) {\n    var view = new DataView(buffer);\n    if (view.getUint16(0, false) != 0xFFD8) return -2;\n    var length = view.byteLength, offset = 2;\n    while (offset < length) {\n    var marker = view.getUint16(offset, false);\n    offset += 2;\n    if (marker == 0xFFE1) {\n        if (view.getUint32(offset += 2, false) != 0x45786966) return -1;\n        var little = view.getUint16(offset += 6, false) == 0x4949;\n        offset += view.getUint32(offset + 4, little);\n        var tags = view.getUint16(offset, little);\n        offset += 2;\n        for (var i = 0; i < tags; i++)\n        if (view.getUint16(offset + (i * 12), little) == 0x0112)\n            return view.getUint16(offset + (i * 12) + 8, little);\n    }\n    else if ((marker & 0xFF00) != 0xFF00) break;\n    else offset += view.getUint16(offset, false);\n    }\n    return (-1);\n}","import axios from 'axios';\n\nexport function callOcrSpace(_ocrApiKey, _lang, _base64Image, _cbProcessResp, _cbProcessError) {\n    const urlOcrApi = \"https://api.ocr.space/parse/image\";\n    var formData = new FormData();\n        formData.append('apikey', _ocrApiKey);\n        formData.append('base64Image', _base64Image);\n        formData.append('language', getOcrLang(_lang));\n    console.log('POST to [' + urlOcrApi + '] started');    \n    axios.post(urlOcrApi, formData)\n    .then(function (response) {\n        _cbProcessResp(response);\n    })\n    .catch(function (error) {\n        _cbProcessError(error);\n    })\n    .then(function () {\n        // always executed\n        console.log('POST to [' + urlOcrApi + '] completed');\n    })\n}\n\nexport const getOcrLang = (_locale) => {\n    if (_locale) {\n        if (_locale.startsWith('zh')) {\n            return 'cht';\n        } else {\n            return 'eng';\n        }\n    } else {\n        return 'eng';\n    }\n}","import React, { Component}  from 'react';\nimport { Page, Toolbar, BottomToolbar, Segment, ToolbarButton, Modal, ProgressCircular } from 'react-onsenui';\nimport { LANG_NONE, LANG_ZH_HK, LANG_ZH_TW, LANG_EN } from './DictEzApp.js';\nimport { getBase64 } from './ImageUtils.js';\nimport { callOcrSpace } from './OcrService.js';\nimport { OCR_SPACE_API_KEY } from './config.js';\n\n// Webpack CSS import\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\n\nimport './OcrPage.css';\n\nconst TOOLBAR_SELECT_LANG = '默書易 Dict-Ez：先選擇語言';\nconst TOOLBAR_START_OCR = '默書易 Dict-Ez：按下圖象辨析';\n\nclass OcrPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toolbar_msg: TOOLBAR_SELECT_LANG\n            , lang: LANG_NONE\n            , isPostingOcr: false\n            , scannedFileBase64: ''\n        }\n\n        this.handleReset = this.handleReset.bind(this);\n        this.handleCapturing = this.handleCapturing.bind(this);\n\n        this.processBase64Image = this.processBase64Image.bind(this);\n        this.processBase64ImageError = this.processBase64ImageError.bind(this);\n        this.processOcrContent = this.processOcrContent.bind(this);\n        this.processOcrError = this.processOcrError.bind(this);\n    }\n   \n    resetAll() {\n        this.setState({\n            toolbar_msg: TOOLBAR_SELECT_LANG\n            , lang: LANG_NONE\n            , isPostingOcr: false\n            , scannedFileBase64: ''\n        });\n    }\n\n    processBase64Image(_base64Url) {\n        this.setState({\n            scannedFileBase64: _base64Url\n        });\n        this.setState({\n            toolbar_msg: TOOLBAR_START_OCR\n        });        \n    }\n\n    processBase64ImageError(_error) {\n        console.log(_error);\n    }\n\n    processOcrContent(_response) {\n        var completeText = '';\n        _response.data.ParsedResults.forEach(function(parsedResult) {\n            completeText += parsedResult.ParsedText + \"\\n\";\n        });\n        this.setState({\n            isPostingOcr: false\n        });\n        this.props.onOcrCompleted(this.state.lang, completeText); \n        console.log(completeText);\n    }\n\n    processOcrError(_error) {\n        this.setState({\n            isPostingOcr: false\n        });\n        console.log(_error);\n    }\n\n    handleReset(_event) {\n        this.resetAll();\n    }\n\n    /**\n     * Capture Camera Input Event\n     * @param {} _event \n     */\n    handleCapturing(_event) {\n        getBase64(_event.target.files[0], this.processBase64Image, this.processBase64ImageError);\n    }\n\n    hangleLangBtnClick(_lang, _event) {\n        document.getElementById(\"imgScanned\").click()\n        this.setState({\n            lang: _lang\n        })\n    }\n\n    render() {\n        return(\n<Page renderToolbar={() => \n    <Toolbar>\n        <div className=\"center\">\n{ this.state.toolbar_msg }\n        </div>\n        <div className=\"right\">\n            <ToolbarButton onClick={this.handleReset}><i className=\"zmdi zmdi-refresh\"></i></ToolbarButton>\n        </div>\n    </Toolbar>\n}>\n    <Modal isOpen={this.state.isPostingOcr}>\n      <p>Loading ...</p>\n      <ProgressCircular indeterminate />\n    </Modal>    \n    <div className='div-bgimg'>\n        <input type=\"file\" id=\"imgScanned\" name=\"imgScanned\" accept=\"image/*\" capture=\"camera\" \n            style={{display:'none'}}\n            onChange={this.handleCapturing}\n            onClick={\n                (event) => {\n                    event.target.value = null;\n                }\n            } \n        />        \n{ this.state.scannedFileBase64 && \n    <img src={ this.state.scannedFileBase64 } alt=\"Optical Character Recognition\" height=\"100%\" \n            onClick={(_event) => {\n                this.setState({\n                    isPostingOcr: true\n                })\n                callOcrSpace(\n                    OCR_SPACE_API_KEY\n                    , this.state.lang\n                    , this.state.scannedFileBase64\n                    , this.processOcrContent\n                    , this.processOcrError\n                );    \n            }}\n    />\n}\n    </div>\n    <BottomToolbar modifier=\"material\">\n        <Segment style={{width: '100%'}} modifier=\"material\">\n            <ToolbarButton \n                onClick={\n                    (_event) => {this.hangleLangBtnClick(LANG_ZH_HK, _event)}\n                }\n            >廣東話</ToolbarButton>\n            <ToolbarButton\n                onClick={\n                    (_event) => {this.hangleLangBtnClick(LANG_ZH_TW, _event)}\n                }\n            >普通語（繁）</ToolbarButton>\n            <ToolbarButton\n                onClick={\n                    (_event) => {this.hangleLangBtnClick(LANG_EN, _event)}\n                }\n            >English</ToolbarButton>\n        </Segment>     \n    </BottomToolbar>    \n</Page>\n        );\n    }\n}\n\nexport default OcrPage;","export const OCR_SPACE_API_KEY = 'ff0751fd8988957';\nexport const VOICE_RSS_API_KEY = '679dc139ae34411489ad95b33225e6ed';","import axios from 'axios';\n\nexport function callVoiceRss(_voiceRssApiKey, _lang, _content, _speed, _cbProcessResp, _cbProcessError) {\n    const urlVoiceRss = \"https://api.voicerss.org/\";\n    var formData = new FormData();\n        formData.append('key', _voiceRssApiKey);\n        formData.append('src', _content);\n        formData.append('hl', getVoiceRssLang(_lang));\n        formData.append('b64', 'true');\n        formData.append('r', _speed);\n    console.log('POST to [' + urlVoiceRss + '] started');    \n    axios.post(urlVoiceRss, formData)\n    .then(function (response) {\n        _cbProcessResp(response);\n    })\n    .catch(function (error) {\n        _cbProcessError(error);\n    })\n    .then(function () {\n        // always executed\n        console.log('POST to [' + urlVoiceRss + '] completed');\n    })\n}\n\nexport const getVoiceRssLang = (_locale) => {\n    if (_locale) {\n        return _locale;\n    } else {\n        return 'en-US';\n    }\n}","import React, { Component}  from 'react';\nimport { Page, Toolbar, ToolbarButton, List, ListItem, Range, Row, Col, Input } from 'react-onsenui';\n// import { LANG_NONE, LANG_ZH_HK, LANG_ZH_TW, LANG_EN } from './DictEzApp.js';\nimport { VOICE_RSS_API_KEY } from './config.js';\nimport { callVoiceRss } from './TtsService.js';\n\n// Webpack CSS import\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\n\nconst TOOLBAR_MSG_INIT = '按此播放';\nconst DEFAULT_SPEECH_SPEED = 50;\nconst VOICE_BYTE_LIMIT = 90000;\n\nconst countBytes = (str) => encodeURI(str).split(/%..|./).length - 1;\n\nclass TtsPage extends Component {\n    constructor(props) {\n        super(props);\n        if (this.props.ttsContent) {\n            // Split Content Text with newline\n            this.state = {\n                toolbar_msg: TOOLBAR_MSG_INIT\n                , ttsContents: this.props.ttsContent.trim().split(/\\r?\\n/)\n                , speechSpeed: DEFAULT_SPEECH_SPEED\n                , isPostingTts: false\n            };\n        } else {\n            this.state = {\n                toolbar_msg: TOOLBAR_MSG_INIT\n                , ttsContents: []\n                , speechSpeed: DEFAULT_SPEECH_SPEED\n                , isPostingTts: false\n            };\n        }\n\n        this.handleReset = this.handleReset.bind(this);\n        this.handleBackHome = this.handleBackHome.bind(this);\n        this.handlePlay = this.handlePlay.bind(this);\n        this.handlePlayAll = this.handlePlayAll.bind(this);\n        this.handleUpdateItem = this.handleUpdateItem.bind(this);\n        this.handleMoveItem = this.handleMoveItem.bind(this);\n\n        this.processTtsContent = this.processTtsContent.bind(this);\n        this.processTtsError = this.processTtsError.bind(this);\n\n        this.playVoice = this.playVoice.bind(this);\n    }\n\n    resetAll() {\n        if (this.props.ttsContent) {\n            // Split Content Text with newline\n            this.setState({\n                ttsContents: this.props.ttsContent.trim().split(/\\r?\\n/)\n                , speechSpeed: DEFAULT_SPEECH_SPEED\n                , isPostingTts: false\n            });\n        } else {\n            this.setState({\n                ttsContents: []\n                , speechSpeed: DEFAULT_SPEECH_SPEED\n                , isPostingTts: false\n            });\n        }        \n    }\n\n    handleBackHome(_event) {\n        this.resetAll();\n        this.props.onBackToHome();\n    }\n\n    handleReset(_event) {\n        this.resetAll();\n    }\n\n    handlePlay(_event, _sentence) {\n        if (this.state.isPostingTts) {\n            // Posting to TTS in progress\n            console.log('Posting to TTS in progress rejects a new coming request.');\n            // TODO: show a dialog to prompt a warning messagae\n        } else {\n            this.setState({\n                isPostingTts: true\n            });\n            callVoiceRss(\n                VOICE_RSS_API_KEY\n                , this.props.lang\n                , _sentence\n                , Math.floor(this.state.speechSpeed / 5.0) - 10\n                , this.processTtsContent\n                , this.processTtsError\n            );    \n        }\n    }\n\n    handlePlayAll(_event) {\n        this.playFromArray(this.state.ttsContents);\n    }\n\n    playFromArray(arrContents) {\n        var voiceContent = \"\";\n        if (typeof arrContents !== undefined && arrContents !== null && arrContents.length > 0) {\n            while (arrContents.length > 0 &&\n                    countBytes(voiceContent + \"\\n\" + arrContents[0]) <= VOICE_BYTE_LIMIT) {\n              voiceContent += \"\\n\" + arrContents.shift();\n            }\n        }\n        if (voiceContent.trim() !== \"\") {\n            callVoiceRss(\n                VOICE_RSS_API_KEY\n                , this.props.lang\n                , voiceContent\n                , Math.floor(this.state.speechSpeed / 5.0) - 10\n                , (_response) => {\n                    if (typeof _response !== undefined && _response !== null) {\n                        var respData = _response.data;\n                        if (respData.startsWith(\"ERROR\")) {\n                          console.log(\"Speech can't be played. Please try next time.\");\n                          console.log(respData);\n                        } else {\n                          let playResult = this.playVoice(respData);\n                          if (!playResult) {\n                            console.log(\"Speech can't be played. Please try next time.\");\n                          } else {\n                              this.playFromArray(arrContents);\n                          }\n                        }\n                    } else {\n                        console.log(\"Speech can't be played. Please try next time.\");\n                    }\n                }\n                , (_error) => {\n                    console.log(_error);\n                }\n            ); \n        }\n    }\n\n    handleUpdateItem(_event, _idx) {\n        this.setState(prevState => {\n            const arrContent = prevState.ttsContents.map((item, idx) => {\n                if (idx === _idx) {\n                    return _event.target.value;\n                } else {\n                    return item;\n                }\n            });\n            return {\n                ttsContents: arrContent\n            };\n        });\n    }\n\n    handleMoveItem(_event, _idx, _step) {\n        if (_idx + _step < 0 || _idx + _step >= this.state.ttsContents.length) {\n            return; // Invalid movement\n        } else {\n            var thisValue = this.state.ttsContents[_idx];\n            var nextValue = this.state.ttsContents[_idx + _step];\n            this.setState(prevState => {\n                const arrContent = prevState.ttsContents.map((item, idx) => {\n                    if (idx === _idx) {\n                        return nextValue;\n                    } else if (idx === (_idx + _step)) {\n                        return thisValue;\n                    } else {\n                        return item;\n                    }\n                });\n                return {\n                    ttsContents: arrContent\n                };\n            });            \n        }\n    }\n\n    processTtsContent(_response) {\n        if (typeof _response !== undefined && _response !== null) {\n            var respData = _response.data;\n            if (respData.startsWith(\"ERROR\")) {\n              console.log(\"Speech can't be played. Please try next time.\");\n              console.log(respData);\n              // TODO: show a dialog to prompt a warning messagae\n            } else {\n              let playResult = this.playVoice(respData);\n              if (!playResult) {\n                console.log(\"Speech can't be played. Please try next time.\");\n                // TODO: show a dialog to prompt a warning messagae\n              }                \n            }\n        } else {\n            console.log(\"Speech can't be played. Please try next time.\");\n            // TODO: show a dialog to prompt a warning messagae\n        }\n        this.setState({\n            isPostingTts: false\n        });        \n    }\n\n    processTtsError(_error) {\n        this.setState({\n            isPostingTts: false\n        });\n        console.log(_error);\n    }\n\n    playVoice(_voiceContent) {\n        var audio = document.querySelector(\"#audioPlayback\");\n        if (!audio.src || audio.paused || audio.ended) {\n            audio.src = _voiceContent;\n            audio.load();\n            var playPromise = audio.play();\n            if (playPromise !== undefined) {\n                playPromise.then(function() {\n                    console.log(\"Automatic playback started!\");\n                }).catch(function(error) {\n                    console.log(error);\n                });\n            } else {\n                console.log(\"audio returns undefined.\");\n            }\n            return playPromise;            \n        } else {\n            console.log(\"audio element is not available.\");\n        }\n        return null; \n    }\n\n    render() {\n        return(\n<Page renderToolbar={() =>\n    <Toolbar>\n        <div className=\"left\">\n            <ToolbarButton onClick={this.handleBackHome}><i className=\"zmdi zmdi-home\"></i></ToolbarButton>\n        </div>        \n        <div className=\"center\" onClick={this.handlePlayAll}>\n{ this.state.toolbar_msg }<i className=\"zmdi zmdi-play-circle\"></i>\n        </div>\n        <div className=\"right\">\n            <ToolbarButton onClick={this.handleReset}><i className=\"zmdi zmdi-refresh\"></i></ToolbarButton>\n        </div>\n    </Toolbar>\n}>\n    <Row>\n        <Col width=\"20%\" verticalAlign=\"center\" style={{ 'textAlign': \"right\" }}>\n            <i className=\"zmdi zmdi-bike\" />Slow\n        </Col>\n        <Col width=\"60^\">\n        <Range modifier=\"material\"\n                style={{width: \"100%\"}}\n                value={this.state.speechSpeed}\n                onChange={(event) => this.setState({speechSpeed: parseInt(event.target.value)})}\n        />\n        </Col>\n        <Col width=\"20%\" verticalAlign=\"center\" style={{ 'textAlign': \"left\" }}>\n            <i className=\"zmdi zmdi-airplane\" />Fast\n        </Col>\n    </Row>\n    <Row><Col>\n        <audio id=\"audioPlayback\" controls src=\"\"></audio>\n    </Col></Row>\n    <Row><Col>\n        <List\n            dataSource={ this.state.ttsContents }\n            renderRow={(row, idx) => (\n                <ListItem key={\"contentItem-\" + idx} modifier={idx === this.state.ttsContents.length - 1 ? 'longdivider' : null}>\n                <div className=\"left\" onClick={(_event) => { this.handlePlay(_event, row); }}><i className=\"zmdi zmdi-play-circle\" style={{\"fontSize\": \"1.5em\"}}></i></div>\n                <div className=\"center\">\n                    <Input type=\"text\" modifier='transparent' style={{ 'width': \"100%\" }} value={row} onChange={(_event) => this.handleUpdateItem(_event, idx)} float></Input>\n                </div>\n                <div className=\"right\">\n                    <i className=\"zmdi zmdi-caret-up-circle\" style={{\"fontSize\": \"1.5em\"}} onClick={(_event) => {this.handleMoveItem(_event, idx, -1)}}></i>\n                    &nbsp;\n                    <i className=\"zmdi zmdi-caret-down-circle\" style={{\"fontSize\": \"1.5em\"}} onClick={(_event) => {this.handleMoveItem(_event, idx, 1)}}></i>\n                </div>\n                </ListItem>\n            )}\n        />\n    </Col></Row>\n</Page>\n        );\n    }\n}\n\nexport default TtsPage;","import React, { Component}  from 'react';\nimport { Page } from 'react-onsenui';\n\n// Webpack CSS import\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\n\n// Application Page components\nimport OcrPage from './OcrPage.js';\nimport TtsPage from './TtsPage.js';\n\n// Constant values across the application\nexport const [ LANG_NONE, LANG_ZH_HK, LANG_ZH_TW, LANG_EN ] = [ \"\", \"zh-hk\", \"zh-tw\", \"en-gb\" ];\n\n/**\n * Main Application Page for Dictation EZ\n * @author Teki Chan\n * @since 25 Jan 2019\n */\nclass DictEzApp extends Component {\n    /**\n     * Default Constructor\n     * @param {*} props     Inbound Properties\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            lang: LANG_NONE\n            , ttsContent: ''\n        }\n        this.resetAll = this.resetAll.bind(this);\n        this.changeToTtsPage = this.changeToTtsPage.bind(this);\n        this.backToOcrPage = this.backToOcrPage.bind(this);\n    }\n\n    changeToTtsPage(_lang, _textContent) {\n        this.setState({\n            lang: _lang\n            , ttsContent: _textContent\n        })\n    }\n\n    backToOcrPage() {\n        this.resetAll();\n    }\n\n    resetAll() {\n        this.setState({\n            lang: LANG_NONE\n            , ttsContent: ''\n        })\n    }\n\n    /**\n     * React JS Render function\n     */\n    render() {\n        return(\n<Page id=\"MainPage\">\n{ this.state.ttsContent === '' &&\n    <OcrPage onOcrCompleted={this.changeToTtsPage}></OcrPage>\n}\n{ this.state.ttsContent &&\n    <TtsPage lang={this.state.lang} ttsContent={this.state.ttsContent} onBackToHome={this.backToOcrPage}></TtsPage>\n}\n</Page>\n        );\n    }\n}\n\nexport default DictEzApp;","import React, { Component}  from 'react';\nimport DictEzApp from './dict-ez/DictEzApp.js';\n\nclass App extends Component {\n  render() {\n    return (\n<DictEzApp></DictEzApp>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}